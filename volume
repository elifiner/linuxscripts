#!/bin/sh
# PulseAudio Volume Control Script
#   2010-05-20 - Gary Hetzel <garyhetzel@gmail.com>
#      
#   BUG:    Currently doesn't get information for the specified sink,
#           but rather just uses the first sink it finds in list-sinks
#           Need to fix this for systems with multiple sinks
#
    
SINK=0
STEP=5
FULLVOL=65537 # 100% volume
MAXVOLPCT=150 # maximum volume percentage (up can go higher than 100%)
MAXVOLUME="$(( ($FULLVOL/100) * $MAXVOLPCT ))"

getperc(){
	VOLPCT=`pacmd list-sinks | grep "volume" | head -n1 | cut -d: -f3 | cut -d% -f1 | tr -d "[:space:]"`
}

getperc;

up(){
	VOLSTEP="$(( $VOLPCT+$STEP ))";
}

down(){
	VOLSTEP="$(( $VOLPCT-$STEP ))";
	SKIPOVERCHECK=1
}

max(){
	pacmd set-sink-volume $SINK $MAXVOLUME > /dev/null
}

min(){
	pacmd set-sink-volume $SINK 0 > /dev/null
}

mute(){
	pacmd set-sink-mute $SINK 1 > /dev/null
}

unmute(){
	pacmd set-sink-mute $SINK 0 > /dev/null
}

toggle(){
	M=`pacmd list-sinks | grep "muted" | cut -d: -f2 | tr -d "[:space:]"`
	if [ $M == "no" ]; then
		mute;
	else
		unmute;
	fi
}

case $1 in
up)
	up;;
down)
	down;;
max)
	max
	exit 0;;
min)
	min
	exit 0;;
toggle)
	toggle
	exit 0;;
mute)
	mute;
	exit 0;;
unmute)
	unmute;
	exit 0;;
*)
	echo "Usage: `basename $0` [up|down|min|max|overmax|toggle|mute|unmute]"
	exit 1;;
esac

VOLUME="$(( ($FULLVOL/100) * $VOLSTEP ))"

if [ -z $SKIPOVERCHECK ]; then
	if [ $VOLUME -gt $MAXVOLUME ]; then
		VOLUME=$MAXVOLUME
	elif [ $VOLUME -lt 0 ]; then
		VOLUME=0
	fi
fi

pacmd set-sink-volume $SINK $VOLUME > /dev/null
VOLPCT=`pacmd list-sinks | grep "volume" | head -n1 | cut -d: -f3 | cut -d% -f1 | tr -d "[:space:]"`

pkill -9 osd_cat
echo Volume $VOLPCT% | osd_cat --pos=bottom --align=center --offset=-120 --delay=1 --font=-*-courier-*-r-*-*-34-*-*-*-*-*-*-* --outline=2 --color=green
